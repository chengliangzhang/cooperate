<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maoding.Storage.Dao.StorageDao" >
    <sql id="maoding_company">
        SELECT
            concat('/',if(lvl0_c.company_name is null,'',concat(lvl0_c.company_name,'/')),
                lvl0_a.path) as path,
            0 as deleted,null as last_modify_duty_id,10 as type_id,0 as file_length
            lvl0_a.id,lvl0_a.create_time,lvl0_a.last_modify_time,lvl0_a.last_modify_user_id,lvl0_a.pid,lvl0_a.node_name
        FROM
            (
                SELECT
                    lvl1_b.org_pid AS path_pid,
                    concat(if(lvl1_c.company_name is null,'',concat(lvl1_c.company_name,'/')),
                        lvl1_a.path) as path,
                    lvl1_a.id,lvl1_a.create_time,lvl1_a.last_modify_time,lvl1_a.last_modify_user_id,lvl1_a.pid,lvl1_a.node_name
                FROM
                    (
                        SELECT
                            lvl2_b.org_pid as path_pid,
                            concat(if(lvl2_c.company_name is null,'',concat(lvl2_c.company_name,'/')),lvl2_a.company_name) as path,
                            lvl2_a.id,
                            lvl2_a.status as deleted,
                            lvl2_a.create_date as create_time,
                            ifnull(lvl2_a.update_date,lvl2_a.create_date) as last_modify_time,
                            ifnull(lvl2_a.update_by,lvl2_a.create_by) as last_modify_user_id,
                            lvl2_b.org_pid AS pid,
                            lvl2_a.company_name as node_name
                        FROM
                        maoding_web_company lvl2_a
                        LEFT JOIN maoding_web_company_relation lvl2_b ON (lvl2_b.org_id = lvl2_a.id)
                        LEFT JOIN maoding_web_company lvl2_c ON (lvl2_b.org_pid = lvl2_c.id)
                    ) lvl1_a
                LEFT JOIN maoding_web_company_relation lvl1_b ON (lvl1_b.org_id = lvl1_a.path_pid)
                LEFT JOIN maoding_web_company lvl1_c ON (lvl1_b.org_pid = lvl1_c.id)
            ) lvl0_a
        LEFT JOIN maoding_web_company_relation lvl0_b ON (lvl0_b.org_id = lvl0_a.path_pid)
        LEFT JOIN maoding_web_company lvl0_c ON (lvl0_b.org_pid = lvl0_c.id)
    </sql>

    <sql id="SimpleNodeFieldList">
        ,a.id
        ,a.node_name as name
        ,a.pid as p_node_id
        ,a.type_id
        ,b.content as type_name
        ,unix_timestamp(ifnull(a.create_time,0)) as create_time_stamp
        ,date_format(ifnull(a.create_time,0),'%Y-%m-%a %T') as create_time_text
        ,unix_timestamp(ifnull(a.last_modify_time,0)) as last_modify_time_stamp
        ,date_format(ifnull(a.last_modify_time,0),'%Y-%m-%a %T') as last_modify_time_text
        ,if(a.type_id >= 10,1,0) as is_directory,
        ,a.file_length
    </sql>

    <sql id="CompanyUnion">
        (<include refid="maoding_company"/>) a
        left join maoding_const b on (a.type_id = b.value_id)
    </sql>

    <sql id="FixConditionForCompanyUnion">
        (b.classic_id = 14)
    </sql>

    <select id="listSubNodeOfCompany" parameterType="com.maoding.Storage.Dto.QuerySubNodeDTO" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO">
        select <include refid="SimpleNodeFieldList"/>
        from <include refid="CompanyUnion"/>
            inner join (<include refid="maoding_company"/>) x on (a.pid = x.id)
        where <include refid="FixConditionForCompanyUnion"/>
            <if test="parentPath != null">
                and (x.path = #{parentPath})
            </if>
    </select>

    <select id="listRootNodeOfCompany" parameterType="com.maoding.Storage.Dto.QuerySubNodeDTO" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO">
        select <include refid="SimpleNodeFieldList"/>
        from <include refid="CompanyUnion"/>
        where <include refid="FixConditionForCompanyUnion"/>
            and (a.pid is null)
    </select>

    <select id="listSubNodeOfProject" parameterType="com.maoding.Storage.Dto.QuerySubNodeDTO" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO">

    </select>

    <select id="listSubNode" parameterType="com.maoding.Storage.Dto.QuerySubNodeDTO" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO">

    </select>

    <sql id="CommonDirFieldList">
        ,a.id
        ,a.node_name as name
        ,a.pid as p_node_id
        ,a.type_id
        ,c.content as type_name
        ,unix_timestamp(ifnull(a.create_time,0)) as create_time_stamp
        ,date_format(ifnull(a.create_time,0),'%Y-%m-%a %T') as create_time_text
        ,unix_timestamp(ifnull(a.last_modify_time,0)) as last_modify_time_stamp
        ,date_format(ifnull(a.last_modify_time,0),'%Y-%m-%a %T') as last_modify_time_text
        ,if(a.type_id >= 3,1,0) as is_directory
    </sql>

    <sql id="SimpleDirUnion">
        maoding_storage a
        inner join maoding_storage_dir b on (a.id = b.id)
        left join maoding_const c on (a.type_id = c.value_id)
    </sql>
    
    <sql id="FixConditionForSimpleDirUnion">
        (a.deleted = 0) and (b.deleted = 0) and (c.classic_id = 14) 
    </sql>

    <sql id="SimpleNodeFieldListForSimpleDirUnion">
        <include refid="CommonDirFieldList"/>
        ,0 as file_length
    </sql>

    <sql id="DirUnion">
        <include refid="SimpleDirUnion"/>
        left join maoding_storage x on (x.path like concat(a.path,'_%'))
        left join maoding_storage_file y on (y.id = x.id)
    </sql>

    <sql id="FixConditionForDirUnion">
        <include refid="FixConditionForSimpleDirUnion"/>
        and (ifnull(x.deleted,0) = 0) and (4 > ifnull(x.type_id,0)) and (ifnull(y.deleted,0) = 0)
    </sql>

    <sql id="DirNodeFieldListForDirUnion">
        <include refid="CommonDirFieldList"/>
        ,sum(ifnull(y.file_length,0)) as file_length
        ,a.path as full_name
        ,b.user_id
        ,b.duty_id
        ,b.org_id
        ,b.project_id
        ,b.task_id
    </sql>

    <sql id="FileUnion">
        maoding_storage a
        inner join maoding_storage_file b on (a.id = b.id)
        left join maoding_const c on (a.type_id = c.value_id)
        left join maoding_const d on (b.file_type_id = d.value_id)
        left join maoding_const e on (b.sync_mode_id = e.value_id)
    </sql>

    <sql id="FixConditionForFileUnion">
        (a.deleted = 0) and (b.deleted = 0)
        and (c.classic_id = 14) and (d.classic_id = 5) and (e.classic_id = 16)
    </sql>

    <sql id="SimpleNodeFieldListForFileUnion">
        <include refid="CommonDirFieldList"/>
        ,b.file_length
    </sql>

    <sql id="FileNodeFieldListForFileUnion">
        <include refid="SimpleNodeFieldListForFileUnion"/>
        ,a.path as full_name
        ,b.file_checksum
        ,b.file_version
        ,b.last_modify_address
        ,b.sync_mode_id
        ,e.content as sync_mode_name
        ,b.file_type_id
        ,d.content as file_type_name
        ,if(a.lock_user_id is null,0,1) as locking
        ,b.creator_duty_id
        ,b.last_modify_duty_id
    </sql>

    <sql id="RootNodeFieldList">
        '' as id
        ,null as pid
        ,'/' as node_name
        ,'' as path
        ,3 as type_id
    </sql>

    <update id="updateParentPath" parameterType="java.util.Map">
        update maoding_storage set path=replace(path,#{oldPath},#{newPath}) where path like concat(#{oldPath},'/%')
    </update>

    <select id="listSubNodeByNodeId" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO" parameterType="java.lang.String">
        select <include refid="SimpleNodeFieldListForSimpleDirUnion"/>
        from <include refid="SimpleDirUnion"/>
        where <include refid="FixConditionForSimpleDirUnion"/>
            <choose>
                <when test="_parameter == null">
                    and (a.pid is null)
                </when>
                <otherwise>
                    and (a.pid = #{_parameter})
                </otherwise>
            </choose>
    </select>

    <select id="listSubNodeByPath" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO" parameterType="java.lang.String">
        <choose>
            <when test="_parameter == null">
                    select <include refid="SimpleNodeFieldListForSimpleDirUnion"/>
                    from <include refid="SimpleDirUnion"/>
                    where <include refid="FixConditionForSimpleDirUnion"/>
                        and (a.pid is null)
                union all
                    select <include refid="SimpleNodeFieldListForFileUnion"/>
                    from <include refid="FileUnion"/>
                    where <include refid="FixConditionForFileUnion"/>
                        and (a.pid is null)
            </when>
            <otherwise>
                    select <include refid="SimpleNodeFieldListForSimpleDirUnion"/>
                    from <include refid="SimpleDirUnion"/>
                        inner join maoding_storage x on (a.pid = x.id)
                    where <include refid="FixConditionForSimpleDirUnion"/>
                        and (ifnull(x.deleted,0) = 0)
                        and (x.path = #{_parameter})
                union all
                    select <include refid="SimpleNodeFieldListForFileUnion"/>
                    from <include refid="FileUnion"/>
                        inner join maoding_storage x on (a.pid = x.id)
                    where <include refid="FixConditionForFileUnion"/>
                        and (ifnull(x.deleted,0) = 0)
                        and (x.path = #{_parameter})
            </otherwise>
        </choose>
    </select>

    <select id="listAllSubNodeIdByPath" resultType="java.lang.String" parameterType="java.lang.String">
        select a.id
        from maoding_storage a
        where (a.deleted = 0)
            <if test="_parameter != null">
                and (a.path like concat(#{_parameter},'/%'))
            </if>
    </select>

    <select id="getSimpleNodeByPath" resultType="com.maoding.Storage.zeroc.SimpleNodeDTO" parameterType="java.lang.String">
        <choose>
            <when test="_parameter == null">
                select <include refid="RootNodeFieldList"/>
            </when>
            <otherwise>
                    select <include refid="SimpleNodeFieldListForSimpleDirUnion"/>
                    from <include refid="SimpleDirUnion"/>
                    where <include refid="FixConditionForSimpleDirUnion"/>
                        and (a.path = #{_parameter})
                    group by a.id
                    limit 1
                union all
                    select <include refid="SimpleNodeFieldListForFileUnion"/>
                    from <include refid="FileUnion"/>
                    where <include refid="FixConditionForFileUnion"/>
                        and (a.path = #{_parameter})
                    group by a.id
                    limit 1
            </otherwise>
        </choose>
    </select>

    <select id="getFirstChildTypeIdByPath" resultType="java.lang.Short" parameterType="java.lang.String">
        select a.type_id
        from maoding_storage a
        where (a.deleted = 0)
            <choose>
                <when test="_parameter == null">
                    and (a.pid is null)
                </when>
                <otherwise>
                    and (a.path like concat(#{_parameter},'/%'))
                </otherwise>
            </choose>
        group by a.id
        limit 1
    </select>

    <select id="getFirstChildNodeByPath" resultType="com.maoding.Storage.Entity.StorageEntity" parameterType="java.lang.String">
        select *
        from maoding_storage a
        where (a.deleted = 0)
            <choose>
                <when test="_parameter == null">
                    and (a.pid is null)
                </when>
                <otherwise>
                    and (a.path like concat(#{_parameter},'/%'))
                </otherwise>
            </choose>
        limit 1
    </select>

    <select id="selectByPath" resultType="com.maoding.Storage.Entity.StorageEntity" parameterType="java.lang.String">
        <choose>
            <when test="_parameter == null">
                select <include refid="RootNodeFieldList"/>
            </when>
            <otherwise>
                select *
                from maoding_storage a
                where (a.deleted = 0)
                    and (a.path = #{_parameter})
                group by a.id
                limit 1
            </otherwise>
        </choose>
    </select>

    <select id="selectByRedundancyPath" resultType="com.maoding.Storage.Entity.StorageEntity" parameterType="java.lang.String">
        <choose>
            <when test="_parameter == null">
                select <include refid="RootNodeFieldList"/>
            </when>
            <otherwise>
                select *
                from maoding_storage a
                where (a.deleted = 0)
                    and (#{_parameter} like concat(a.path,'%'))
                    and ((#{_parameter} = concat(a.path,'/',a.node_name))
                        or (substring(#{_parameter},char_length(a.path)+1,1) = '/'))
                order by length(a.path) desc
                limit 1
            </otherwise>
        </choose>
    </select>

    <select id="getDirNodeInfoByPath" resultType="com.maoding.Storage.zeroc.CooperateDirNodeDTO" parameterType="java.lang.String">
        <choose>
            <when test="_parameter == null">
                select <include refid="RootNodeFieldList"/>
            </when>
            <otherwise>
                select <include refid="DirNodeFieldListForDirUnion"/>
                from <include refid="DirUnion"/>
                where <include refid="FixConditionForDirUnion"/>
                    <if test="_parameter != null">
                        and (a.path = #{_parameter})
                    </if>
                group by a.id
                limit 1
            </otherwise>
        </choose>
    </select>

    <select id="getFileNodeInfoByPath" resultType="com.maoding.Storage.zeroc.FileNodeDTO" parameterType="java.lang.String">
        select <include refid="FileNodeFieldListForFileUnion"/>
        from <include refid="FileUnion"/>
        where <include refid="FixConditionForFileUnion"/>
            <if test="_parameter != null">
                and (a.path = #{_parameter})
            </if>
        group by a.id
        limit 1
    </select>

    <select id="getDirNodeInfoByNodeId" resultType="com.maoding.Storage.zeroc.CooperateDirNodeDTO" parameterType="java.lang.String">
        select
            a.id as id
            ,a.node_name as name
            ,a.pid as p_node_id
            ,a.detail_id
            ,ifnull(c.full_name,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '')) as full_name
            ,c.user_id
            ,c.duty_id
            ,c.org_id
            ,c.project_id
            ,c.task_id
            ,a.type_id
            ,d.content as type_name
            ,unix_timestamp(a.create_time) as create_time_stamp
            ,date_format(a.create_time,'%Y-%m-%d %T') as create_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_dir c on (a.detail_id = c.id)
            inner join maoding_const d on (a.type_id = d.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and (d.classic_id = 14)
            <if test="_parameter != null">
                and (a.id = #{_parameter})
            </if>
        group by a.id
    </select>

    <select id="getFileNodeInfo" resultType="com.maoding.Storage.zeroc.FileNodeDTO" parameterType="com.maoding.Storage.zeroc.CooperationQueryDTO">
        select
            c.id
            ,c.file_name as name
            ,a.id as node_id
            ,a.pid as p_node_id
            ,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '') as path_name
            ,c.file_length
            ,c.file_checksum
            ,c.file_version
            ,c.specialty_id
            ,d.content as specialty_name
            ,c.last_modify_address
            ,c.sync_mode_id
            ,e.content as sync_mode_name
            ,c.type_id
            ,f.content as type_name
            ,c.locking
            ,c.creator_duty_id
            ,unix_timestamp(c.create_time) as create_time_stamp
            ,date_format(c.create_time,'%Y-%m-%d %T') as create_time_text
            ,c.last_modify_duty_id
            ,unix_timestamp(c.last_modify_time) as last_modify_time_stamp
            ,date_format(c.last_modify_time,'%Y-%m-%d %T') as last_modify_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_file c on (a.detail_id = c.id)
            left join maoding_const d on (c.specialty_id = d.value_id)
            left join maoding_const e on (c.sync_mode_id = e.value_id)
            left join maoding_const f on (c.type_id = f.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and ((d.classic_id = 18) or (d.classic_id is null))
            and ((e.classic_id = 16) or (e.classic_id is null))
            and ((f.classic_id = 5) or (f.classic_id))
            and (a.type_id = 0)
            <choose>
                <when test="nodeId != null">
                    and (a.id = #{nodeId})
                </when>
                <otherwise>
                    <choose>
                        <when test="pNodeId != null">
                            and (a.pid = #{pNodeId})
                        </when>
                        <otherwise>
                            and (a.pid is null)
                        </otherwise>
                    </choose>
                    <if test="nodeName != null">
                        and (a.node_name = #{nodeName})
                    </if>
                </otherwise>
            </choose>
        group by a.id
    </select>

    <select id="getFileNodeInfoByNodeId" resultType="com.maoding.Storage.zeroc.FileNodeDTO" parameterType="java.lang.String">
        select
            c.id
            ,c.file_name as name
            ,a.path as node_id
            ,a.pid as p_node_id
            ,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '') as path_name
            ,c.file_length
            ,c.file_checksum
            ,c.file_version
            ,c.specialty_id
            ,d.content as specialty_name
            ,c.last_modify_address
            ,c.sync_mode_id
            ,e.content as sync_mode_name
            ,c.type_id
            ,f.content as type_name
            ,c.locking
            ,c.creator_duty_id
            ,unix_timestamp(c.create_time) as create_time_stamp
            ,date_format(c.create_time,'%Y-%m-%d %T') as create_time_text
            ,c.last_modify_duty_id
            ,unix_timestamp(c.last_modify_time) as last_modify_time_stamp
            ,date_format(c.last_modify_time,'%Y-%m-%d %T') as last_modify_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_file c on (a.detail_id = c.id)
            left join maoding_const d on (c.specialty_id = d.value_id)
            left join maoding_const e on (c.sync_mode_id = e.value_id)
            left join maoding_const f on (c.type_id = f.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and ((d.classic_id = 18) or (d.classic_id is null))
            and ((e.classic_id = 16) or (e.classic_id is null))
            and ((f.classic_id = 5) or (f.classic_id is null))
            and (a.type_id = 0)
            <if test="_parameter != null">
                and (a.id = #{_parameter})
            </if>
        group by a.id
    </select>

    <select id="listSubDir" resultType="com.maoding.Storage.zeroc.CooperateDirNodeDTO" parameterType="com.maoding.Storage.zeroc.CooperationQueryDTO">
        select
            a.id as id
            ,a.node_name as name
            ,a.pid as p_node_id
            ,a.detail_id
            ,ifnull(c.full_name,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '')) as full_name
            ,c.user_id
            ,c.duty_id
            ,c.org_id
            ,c.project_id
            ,c.task_id
            ,a.type_id
            ,d.content as type_name
            ,unix_timestamp(a.create_time) as create_time_stamp
            ,date_format(a.create_time,'%Y-%m-%d %T') as create_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_dir c on (a.detail_id = c.id)
            inner join maoding_const d on (a.type_id = d.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and (d.classic_id = 14)
            <if test="nodeId != null">
                and (a.id != #{nodeId})
                and find_in_set(#{nodeId},a.path)
            </if>
            <if test="userId != null">
                and (c.last_modify_user_id = #{userId})
            </if>
            <if test="dutyId != null">
                and (c.last_modify_duty_id = #{dutyId})
            </if>
            <if test="orgId != null">
                and (c.org_id = #{orgId})
            </if>
            <if test="projectId != null">
                and (c.project_id = #{projectId})
            </if>
            <if test="taskId != null">
                and (c.task_id = #{taskId})
            </if>
            <if test="level > 0">
                <choose>
                    <when test="nodeId != null">
                        and (((select length(path) from maoding_storage where id=#{nodeId} limit 1) + (33 * #{level}) + 1) > length(a.path))
                    </when>
                    <otherwise>
                        and ((33 * #{level}) > length(a.path))
                    </otherwise>
                </choose>
            </if>
        group by a.id
    </select>

    <select id="listMainFile" resultType="com.maoding.Storage.zeroc.CooperateFileDTO" parameterType="java.util.List">
        select
            c.id
            ,c.file_name as name
            ,a.id as node_id
            ,a.pid as p_node_id
            ,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '') as path_name
            ,c.file_length
            ,c.file_checksum
            ,c.file_version
            ,c.specialty_id
            ,d.content as specialty_name
            ,c.last_modify_address
            ,c.sync_mode_id
            ,e.content as sync_mode_name
            ,c.type_id
            ,f.content as type_name
            ,c.locking
            ,c.creator_duty_id
            ,unix_timestamp(c.create_time) as create_time_stamp
            ,date_format(c.create_time,'%Y-%m-%d %T') as create_time_text
            ,c.last_modify_duty_id
            ,unix_timestamp(c.last_modify_time) as last_modify_time_stamp
            ,date_format(c.last_modify_time,'%Y-%m-%d %T') as last_modify_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_file c on (a.detail_id = c.id)
            left join maoding_const d on (c.specialty_id = d.value_id)
            left join maoding_const e on (c.sync_mode_id = e.value_id)
            left join maoding_const f on (c.type_id = f.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and ((d.classic_id = 18) or (d.classic_id is null))
            and ((e.classic_id = 16) or (e.classic_id is null))
            and ((f.classic_id = 5) or (f.classic_id is null))
            and (a.type_id = 0)
            <if test="list != null and list.size() > 0">
                and a.pid in
                <foreach collection="list" item="dirId" open="(" separator="," close=")">
                    #{dirId}
                </foreach>
            </if>
        group by a.id
    </select>

    <select id="listRelatedFile" resultType="com.maoding.Storage.zeroc.FileNodeDTO" parameterType="java.lang.String">
        select
            d.id
            ,d.file_name as name
            ,b.id as node_id
            ,b.pid as p_node_id
            ,group_concat(if(b.node_name is null,'',concat(b.node_name,'/')) order by length(b.path) separator '') as path_name
            ,d.file_length
            ,d.file_checksum
            ,d.file_version
            ,d.specialty_id
            ,e.content as specialty_name
            ,d.last_modify_address
            ,d.sync_mode_id
            ,f.content as sync_mode_name
            ,d.type_id
            ,g.content as type_name
            ,d.locking
            ,d.creator_duty_id
            ,unix_timestamp(d.create_time) as create_time_stamp
            ,date_format(d.create_time,'%Y-%m-%d %T') as create_time_text
            ,d.last_modify_duty_id
            ,unix_timestamp(d.last_modify_time) as last_modify_time_stamp
            ,date_format(d.last_modify_time,'%Y-%m-%d %T') as last_modify_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (a.detail_id = b.id)
            inner join maoding_storage c on (find_in_set(c.id,b.path))
            inner join maoding_storage_file d on (b.detail_id = d.id)
            left join maoding_const e on (d.specialty_id = e.value_id)
            left join maoding_const f on (d.sync_mode_id = f.value_id)
            left join maoding_const g on (d.type_id = g.value_id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0) and (d.deleted = 0)
            and ((e.classic_id = 18) or (e.classic_id is null))
            and ((f.classic_id = 16) or (f.classic_id is null))
            and ((g.classic_id = 5) or (g.classic_id is null))
            and (a.type_id = 1)
            <if test="_parameter != null">
                and a.pid = #{_parameter}
            </if>
        group by b.id
    </select>

    <select id="listVersion" resultType="com.maoding.Storage.zeroc.FileVersionDTO" parameterType="java.lang.String">
        select
            c.id
            ,b.id as node_id
            ,c.file_version
            ,c.last_modify_address
            ,c.locking
            ,unix_timestamp(c.create_time) as create_time_stamp
            ,date_format(c.create_time,'%Y-%m-%d %T') as create_time_text
            ,c.last_modify_duty_id
            ,unix_timestamp(c.last_modify_time) as last_modify_time_stamp
            ,date_format(c.last_modify_time,'%Y-%m-%d %T') as last_modify_time_text
        from
            maoding_storage a
            inner join maoding_storage b on (find_in_set(b.id,a.path))
            inner join maoding_storage_file c on (b.detail_id = c.id)
        where (a.deleted = 0) and (b.deleted = 0) and (c.deleted = 0)
            and ((b.type_id = 0) or (b.type_id = 2))
            <if test="_parameter != null">
                and a.id = #{_parameter}
            </if>
        group by b.id
    </select>

    <select id="selectByPIdAndName" resultType="com.maoding.Storage.Entity.StorageEntity" parameterType="com.maoding.Storage.Dto.QueryByPidAndNameDTO">
        select * from maoding_storage a
        where (a.deleted = 0)
            <choose>
                <when test="pid == null">
                    and (a.pid is null)
                </when>
                <otherwise>
                    and (a.pid = #{pid})
                </otherwise>
            </choose>
            <if test="name != null">
                and (a.node_name = #{name})
            </if>
        limit 1
    </select>
    <select id="listFileByScopeAndKey" resultType="com.maoding.Storage.zeroc.CooperateFileDTO" parameterType="com.maoding.Storage.zeroc.CooperationQueryDTO">
      select
        a.id
        ,a.file_name as name
        ,b.id as node_id
        ,b.pid as p_node_id
        ,b.node_name
        ,group_concat(if(c.node_name is null,'',concat(c.node_name,'/')) order by length(c.path) separator '') as path_name
        ,a.file_length
        ,a.file_checksum
        ,a.file_version
        ,a.specialty_id
        ,a.last_modify_address
        ,a.sync_mode_id as sync_mode_id
        ,a.type_id
        ,a.locking
        ,a.creator_duty_id
        ,a.create_time
        ,date_format(a.create_time,'%Y-%m-%a %T') as create_time_text
        ,a.last_modify_duty_id
        ,a.last_modify_time
        ,date_format(a.create_time,'%Y-%m-%a %T') as last_modify_time_text
      from
          maoding_storage_file a
          left join maoding_storage b on (b.detail_id = a.id)
          left join maoding_storage c on (find_in_set(c.id,b.path))
      where (a.deleted = 0)
          <if test="scope != null">
              and (a.file_scope = #{scope})
          </if>
          <if test="key != null">
              and (a.file_key like concat('%',#{key}))
          </if>
      group by a.id
    </select>

</mapper>
