// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `FileServerData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.FileServer.zeroc;

/**
 **/
@Deprecated
public class CreateVersionRequestDTO implements java.lang.Cloneable,
                                                java.io.Serializable
{
    public String actionTypeId;

    public String getActionTypeId()
    {
        return actionTypeId;
    }

    public void setActionTypeId(String actionTypeId)
    {
        this.actionTypeId = actionTypeId;
    }

    public String ownerUserId;

    public String getOwnerUserId()
    {
        return ownerUserId;
    }

    public void setOwnerUserId(String ownerUserId)
    {
        this.ownerUserId = ownerUserId;
    }

    /**
     * @deprecated 使用ownerUserId代替
     **/
    @Deprecated
    public String userId;

    /**
     * @deprecated 使用ownerUserId代替
     **/
    @Deprecated
    public String getUserId()
    {
        return userId;
    }

    /**
     * @deprecated 使用ownerUserId代替
     **/
    @Deprecated
    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String fileVersion;

    public String getFileVersion()
    {
        return fileVersion;
    }

    public void setFileVersion(String fileVersion)
    {
        this.fileVersion = fileVersion;
    }

    public String majorName;

    public String getMajorName()
    {
        return majorName;
    }

    public void setMajorName(String majorName)
    {
        this.majorName = majorName;
    }

    public String remark;

    public String getRemark()
    {
        return remark;
    }

    public void setRemark(String remark)
    {
        this.remark = remark;
    }

    public String path;

    public String getPath()
    {
        return path;
    }

    public void setPath(String path)
    {
        this.path = path;
    }

    public String mainFileId;

    public String getMainFileId()
    {
        return mainFileId;
    }

    public void setMainFileId(String mainFileId)
    {
        this.mainFileId = mainFileId;
    }

    public String serverTypeId;

    public String getServerTypeId()
    {
        return serverTypeId;
    }

    public void setServerTypeId(String serverTypeId)
    {
        this.serverTypeId = serverTypeId;
    }

    public String serverAddress;

    public String getServerAddress()
    {
        return serverAddress;
    }

    public void setServerAddress(String serverAddress)
    {
        this.serverAddress = serverAddress;
    }

    public String baseDir;

    public String getBaseDir()
    {
        return baseDir;
    }

    public void setBaseDir(String baseDir)
    {
        this.baseDir = baseDir;
    }

    public CreateVersionRequestDTO()
    {
        this.actionTypeId = "";
        this.ownerUserId = "";
        this.userId = "";
        this.fileVersion = "";
        this.majorName = "";
        this.remark = "";
        this.path = "";
        this.mainFileId = "";
        this.serverTypeId = "";
        this.serverAddress = "";
        this.baseDir = "";
    }

    public CreateVersionRequestDTO(String actionTypeId, String ownerUserId, String userId, String fileVersion, String majorName, String remark, String path, String mainFileId, String serverTypeId, String serverAddress, String baseDir)
    {
        this.actionTypeId = actionTypeId;
        this.ownerUserId = ownerUserId;
        this.userId = userId;
        this.fileVersion = fileVersion;
        this.majorName = majorName;
        this.remark = remark;
        this.path = path;
        this.mainFileId = mainFileId;
        this.serverTypeId = serverTypeId;
        this.serverAddress = serverAddress;
        this.baseDir = baseDir;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CreateVersionRequestDTO r = null;
        if(rhs instanceof CreateVersionRequestDTO)
        {
            r = (CreateVersionRequestDTO)rhs;
        }

        if(r != null)
        {
            if(this.actionTypeId != r.actionTypeId)
            {
                if(this.actionTypeId == null || r.actionTypeId == null || !this.actionTypeId.equals(r.actionTypeId))
                {
                    return false;
                }
            }
            if(this.ownerUserId != r.ownerUserId)
            {
                if(this.ownerUserId == null || r.ownerUserId == null || !this.ownerUserId.equals(r.ownerUserId))
                {
                    return false;
                }
            }
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.fileVersion != r.fileVersion)
            {
                if(this.fileVersion == null || r.fileVersion == null || !this.fileVersion.equals(r.fileVersion))
                {
                    return false;
                }
            }
            if(this.majorName != r.majorName)
            {
                if(this.majorName == null || r.majorName == null || !this.majorName.equals(r.majorName))
                {
                    return false;
                }
            }
            if(this.remark != r.remark)
            {
                if(this.remark == null || r.remark == null || !this.remark.equals(r.remark))
                {
                    return false;
                }
            }
            if(this.path != r.path)
            {
                if(this.path == null || r.path == null || !this.path.equals(r.path))
                {
                    return false;
                }
            }
            if(this.mainFileId != r.mainFileId)
            {
                if(this.mainFileId == null || r.mainFileId == null || !this.mainFileId.equals(r.mainFileId))
                {
                    return false;
                }
            }
            if(this.serverTypeId != r.serverTypeId)
            {
                if(this.serverTypeId == null || r.serverTypeId == null || !this.serverTypeId.equals(r.serverTypeId))
                {
                    return false;
                }
            }
            if(this.serverAddress != r.serverAddress)
            {
                if(this.serverAddress == null || r.serverAddress == null || !this.serverAddress.equals(r.serverAddress))
                {
                    return false;
                }
            }
            if(this.baseDir != r.baseDir)
            {
                if(this.baseDir == null || r.baseDir == null || !this.baseDir.equals(r.baseDir))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::CreateVersionRequestDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, actionTypeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, ownerUserId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileVersion);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, majorName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, remark);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, path);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mainFileId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, serverTypeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, serverAddress);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, baseDir);
        return h_;
    }

    public CreateVersionRequestDTO clone()
    {
        CreateVersionRequestDTO c = null;
        try
        {
            c = (CreateVersionRequestDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.actionTypeId);
        ostr.writeString(this.ownerUserId);
        ostr.writeString(this.userId);
        ostr.writeString(this.fileVersion);
        ostr.writeString(this.majorName);
        ostr.writeString(this.remark);
        ostr.writeString(this.path);
        ostr.writeString(this.mainFileId);
        ostr.writeString(this.serverTypeId);
        ostr.writeString(this.serverAddress);
        ostr.writeString(this.baseDir);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.actionTypeId = istr.readString();
        this.ownerUserId = istr.readString();
        this.userId = istr.readString();
        this.fileVersion = istr.readString();
        this.majorName = istr.readString();
        this.remark = istr.readString();
        this.path = istr.readString();
        this.mainFileId = istr.readString();
        this.serverTypeId = istr.readString();
        this.serverAddress = istr.readString();
        this.baseDir = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, CreateVersionRequestDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public CreateVersionRequestDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        CreateVersionRequestDTO v = new CreateVersionRequestDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<CreateVersionRequestDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, CreateVersionRequestDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<CreateVersionRequestDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(CreateVersionRequestDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final CreateVersionRequestDTO _nullMarshalValue = new CreateVersionRequestDTO();

    public static final long serialVersionUID = 1635625137L;
}
