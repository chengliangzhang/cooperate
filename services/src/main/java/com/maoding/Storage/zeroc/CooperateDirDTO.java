// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Storage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.Storage.zeroc;

public class CooperateDirDTO implements java.lang.Cloneable,
                                        java.io.Serializable
{
    public CooperateDirNodeDTO node;

    public CooperateDirNodeDTO getNode()
    {
        return node;
    }

    public void setNode(CooperateDirNodeDTO node)
    {
        this.node = node;
    }

    public java.util.List<CooperateDirNodeDTO> subDirList;

    public java.util.List<CooperateDirNodeDTO> getSubDirList()
    {
        return subDirList;
    }

    public void setSubDirList(java.util.List<CooperateDirNodeDTO> subDirList)
    {
        this.subDirList = subDirList;
    }

    public java.util.List<CooperateFileDTO> fileList;

    public java.util.List<CooperateFileDTO> getFileList()
    {
        return fileList;
    }

    public void setFileList(java.util.List<CooperateFileDTO> fileList)
    {
        this.fileList = fileList;
    }

    public CooperateDirDTO()
    {
    }

    public CooperateDirDTO(CooperateDirNodeDTO node, java.util.List<CooperateDirNodeDTO> subDirList, java.util.List<CooperateFileDTO> fileList)
    {
        this.node = node;
        this.subDirList = subDirList;
        this.fileList = fileList;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CooperateDirDTO r = null;
        if(rhs instanceof CooperateDirDTO)
        {
            r = (CooperateDirDTO)rhs;
        }

        if(r != null)
        {
            if(this.node != r.node)
            {
                if(this.node == null || r.node == null || !this.node.equals(r.node))
                {
                    return false;
                }
            }
            if(this.subDirList != r.subDirList)
            {
                if(this.subDirList == null || r.subDirList == null || !this.subDirList.equals(r.subDirList))
                {
                    return false;
                }
            }
            if(this.fileList != r.fileList)
            {
                if(this.fileList == null || r.fileList == null || !this.fileList.equals(r.fileList))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::CooperateDirDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, node);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, subDirList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileList);
        return h_;
    }

    public CooperateDirDTO clone()
    {
        CooperateDirDTO c = null;
        try
        {
            c = (CooperateDirDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeValue(this.node);
        CooperateDirListHelper.write(ostr, this.subDirList);
        CooperateFileListHelper.write(ostr, this.fileList);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        istr.readValue(v -> node = v, CooperateDirNodeDTO.class);
        this.subDirList = CooperateDirListHelper.read(istr);
        this.fileList = CooperateFileListHelper.read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, CooperateDirDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public CooperateDirDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        CooperateDirDTO v = new CooperateDirDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<CooperateDirDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, CooperateDirDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<CooperateDirDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(CooperateDirDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final CooperateDirDTO _nullMarshalValue = new CooperateDirDTO();

    public static final long serialVersionUID = -160017372L;
}
