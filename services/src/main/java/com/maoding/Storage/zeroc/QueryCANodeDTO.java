// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `StorageData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.Storage.zeroc;

public class QueryCANodeDTO implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public String rangeId;

    public String getRangeId()
    {
        return rangeId;
    }

    public void setRangeId(String rangeId)
    {
        this.rangeId = rangeId;
    }

    public String notTypeId;

    public String getNotTypeId()
    {
        return notTypeId;
    }

    public void setNotTypeId(String notTypeId)
    {
        this.notTypeId = notTypeId;
    }

    public String passDesign;

    public String getPassDesign()
    {
        return passDesign;
    }

    public void setPassDesign(String passDesign)
    {
        this.passDesign = passDesign;
    }

    public String passCheck;

    public String getPassCheck()
    {
        return passCheck;
    }

    public void setPassCheck(String passCheck)
    {
        this.passCheck = passCheck;
    }

    public String passAudit;

    public String getPassAudit()
    {
        return passAudit;
    }

    public void setPassAudit(String passAudit)
    {
        this.passAudit = passAudit;
    }

    public String userId;

    public String getUserId()
    {
        return userId;
    }

    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String taskLeaderMode;

    public String getTaskLeaderMode()
    {
        return taskLeaderMode;
    }

    public void setTaskLeaderMode(String taskLeaderMode)
    {
        this.taskLeaderMode = taskLeaderMode;
    }

    public String designerMode;

    public String getDesignerMode()
    {
        return designerMode;
    }

    public void setDesignerMode(String designerMode)
    {
        this.designerMode = designerMode;
    }

    public String checkerMode;

    public String getCheckerMode()
    {
        return checkerMode;
    }

    public void setCheckerMode(String checkerMode)
    {
        this.checkerMode = checkerMode;
    }

    public String auditorMode;

    public String getAuditorMode()
    {
        return auditorMode;
    }

    public void setAuditorMode(String auditorMode)
    {
        this.auditorMode = auditorMode;
    }

    public String webRoleTypeId;

    public String getWebRoleTypeId()
    {
        return webRoleTypeId;
    }

    public void setWebRoleTypeId(String webRoleTypeId)
    {
        this.webRoleTypeId = webRoleTypeId;
    }

    public QueryCANodeDTO()
    {
        this.rangeId = "";
        this.notTypeId = "";
        this.passDesign = "";
        this.passCheck = "";
        this.passAudit = "";
        this.userId = "";
        this.taskLeaderMode = "";
        this.designerMode = "";
        this.checkerMode = "";
        this.auditorMode = "";
        this.webRoleTypeId = "";
    }

    public QueryCANodeDTO(String rangeId, String notTypeId, String passDesign, String passCheck, String passAudit, String userId, String taskLeaderMode, String designerMode, String checkerMode, String auditorMode, String webRoleTypeId)
    {
        this.rangeId = rangeId;
        this.notTypeId = notTypeId;
        this.passDesign = passDesign;
        this.passCheck = passCheck;
        this.passAudit = passAudit;
        this.userId = userId;
        this.taskLeaderMode = taskLeaderMode;
        this.designerMode = designerMode;
        this.checkerMode = checkerMode;
        this.auditorMode = auditorMode;
        this.webRoleTypeId = webRoleTypeId;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        QueryCANodeDTO r = null;
        if(rhs instanceof QueryCANodeDTO)
        {
            r = (QueryCANodeDTO)rhs;
        }

        if(r != null)
        {
            if(this.rangeId != r.rangeId)
            {
                if(this.rangeId == null || r.rangeId == null || !this.rangeId.equals(r.rangeId))
                {
                    return false;
                }
            }
            if(this.notTypeId != r.notTypeId)
            {
                if(this.notTypeId == null || r.notTypeId == null || !this.notTypeId.equals(r.notTypeId))
                {
                    return false;
                }
            }
            if(this.passDesign != r.passDesign)
            {
                if(this.passDesign == null || r.passDesign == null || !this.passDesign.equals(r.passDesign))
                {
                    return false;
                }
            }
            if(this.passCheck != r.passCheck)
            {
                if(this.passCheck == null || r.passCheck == null || !this.passCheck.equals(r.passCheck))
                {
                    return false;
                }
            }
            if(this.passAudit != r.passAudit)
            {
                if(this.passAudit == null || r.passAudit == null || !this.passAudit.equals(r.passAudit))
                {
                    return false;
                }
            }
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.taskLeaderMode != r.taskLeaderMode)
            {
                if(this.taskLeaderMode == null || r.taskLeaderMode == null || !this.taskLeaderMode.equals(r.taskLeaderMode))
                {
                    return false;
                }
            }
            if(this.designerMode != r.designerMode)
            {
                if(this.designerMode == null || r.designerMode == null || !this.designerMode.equals(r.designerMode))
                {
                    return false;
                }
            }
            if(this.checkerMode != r.checkerMode)
            {
                if(this.checkerMode == null || r.checkerMode == null || !this.checkerMode.equals(r.checkerMode))
                {
                    return false;
                }
            }
            if(this.auditorMode != r.auditorMode)
            {
                if(this.auditorMode == null || r.auditorMode == null || !this.auditorMode.equals(r.auditorMode))
                {
                    return false;
                }
            }
            if(this.webRoleTypeId != r.webRoleTypeId)
            {
                if(this.webRoleTypeId == null || r.webRoleTypeId == null || !this.webRoleTypeId.equals(r.webRoleTypeId))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::QueryCANodeDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, rangeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, notTypeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, passDesign);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, passCheck);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, passAudit);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskLeaderMode);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, designerMode);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, checkerMode);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, auditorMode);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, webRoleTypeId);
        return h_;
    }

    public QueryCANodeDTO clone()
    {
        QueryCANodeDTO c = null;
        try
        {
            c = (QueryCANodeDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.rangeId);
        ostr.writeString(this.notTypeId);
        ostr.writeString(this.passDesign);
        ostr.writeString(this.passCheck);
        ostr.writeString(this.passAudit);
        ostr.writeString(this.userId);
        ostr.writeString(this.taskLeaderMode);
        ostr.writeString(this.designerMode);
        ostr.writeString(this.checkerMode);
        ostr.writeString(this.auditorMode);
        ostr.writeString(this.webRoleTypeId);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.rangeId = istr.readString();
        this.notTypeId = istr.readString();
        this.passDesign = istr.readString();
        this.passCheck = istr.readString();
        this.passAudit = istr.readString();
        this.userId = istr.readString();
        this.taskLeaderMode = istr.readString();
        this.designerMode = istr.readString();
        this.checkerMode = istr.readString();
        this.auditorMode = istr.readString();
        this.webRoleTypeId = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, QueryCANodeDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public QueryCANodeDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        QueryCANodeDTO v = new QueryCANodeDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<QueryCANodeDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, QueryCANodeDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<QueryCANodeDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(QueryCANodeDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final QueryCANodeDTO _nullMarshalValue = new QueryCANodeDTO();

    public static final long serialVersionUID = -168937953L;
}
