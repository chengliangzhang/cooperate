// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Storage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.Storage.zeroc;

public class CreateNodeRequestDTO implements java.lang.Cloneable,
                                             java.io.Serializable
{
    public String pNodeId;

    public String getPNodeId()
    {
        return pNodeId;
    }

    public void setPNodeId(String pNodeId)
    {
        this.pNodeId = pNodeId;
    }

    public String fullName;

    public String getFullName()
    {
        return fullName;
    }

    public void setFullName(String fullName)
    {
        this.fullName = fullName;
    }

    public String userId;

    public String getUserId()
    {
        return userId;
    }

    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String dutyId;

    public String getDutyId()
    {
        return dutyId;
    }

    public void setDutyId(String dutyId)
    {
        this.dutyId = dutyId;
    }

    public String orgId;

    public String getOrgId()
    {
        return orgId;
    }

    public void setOrgId(String orgId)
    {
        this.orgId = orgId;
    }

    public String projectId;

    public String getProjectId()
    {
        return projectId;
    }

    public void setProjectId(String projectId)
    {
        this.projectId = projectId;
    }

    public String taskId;

    public String getTaskId()
    {
        return taskId;
    }

    public void setTaskId(String taskId)
    {
        this.taskId = taskId;
    }

    public short typeId;

    public short getTypeId()
    {
        return typeId;
    }

    public void setTypeId(short typeId)
    {
        this.typeId = typeId;
    }

    public CreateNodeRequestDTO()
    {
        this.pNodeId = "";
        this.fullName = "";
        this.userId = "";
        this.dutyId = "";
        this.orgId = "";
        this.projectId = "";
        this.taskId = "";
    }

    public CreateNodeRequestDTO(String pNodeId, String fullName, String userId, String dutyId, String orgId, String projectId, String taskId, short typeId)
    {
        this.pNodeId = pNodeId;
        this.fullName = fullName;
        this.userId = userId;
        this.dutyId = dutyId;
        this.orgId = orgId;
        this.projectId = projectId;
        this.taskId = taskId;
        this.typeId = typeId;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CreateNodeRequestDTO r = null;
        if(rhs instanceof CreateNodeRequestDTO)
        {
            r = (CreateNodeRequestDTO)rhs;
        }

        if(r != null)
        {
            if(this.pNodeId != r.pNodeId)
            {
                if(this.pNodeId == null || r.pNodeId == null || !this.pNodeId.equals(r.pNodeId))
                {
                    return false;
                }
            }
            if(this.fullName != r.fullName)
            {
                if(this.fullName == null || r.fullName == null || !this.fullName.equals(r.fullName))
                {
                    return false;
                }
            }
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.dutyId != r.dutyId)
            {
                if(this.dutyId == null || r.dutyId == null || !this.dutyId.equals(r.dutyId))
                {
                    return false;
                }
            }
            if(this.orgId != r.orgId)
            {
                if(this.orgId == null || r.orgId == null || !this.orgId.equals(r.orgId))
                {
                    return false;
                }
            }
            if(this.projectId != r.projectId)
            {
                if(this.projectId == null || r.projectId == null || !this.projectId.equals(r.projectId))
                {
                    return false;
                }
            }
            if(this.taskId != r.taskId)
            {
                if(this.taskId == null || r.taskId == null || !this.taskId.equals(r.taskId))
                {
                    return false;
                }
            }
            if(this.typeId != r.typeId)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::CreateNodeRequestDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, pNodeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fullName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, dutyId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, orgId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, typeId);
        return h_;
    }

    public CreateNodeRequestDTO clone()
    {
        CreateNodeRequestDTO c = null;
        try
        {
            c = (CreateNodeRequestDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.pNodeId);
        ostr.writeString(this.fullName);
        ostr.writeString(this.userId);
        ostr.writeString(this.dutyId);
        ostr.writeString(this.orgId);
        ostr.writeString(this.projectId);
        ostr.writeString(this.taskId);
        ostr.writeShort(this.typeId);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.pNodeId = istr.readString();
        this.fullName = istr.readString();
        this.userId = istr.readString();
        this.dutyId = istr.readString();
        this.orgId = istr.readString();
        this.projectId = istr.readString();
        this.taskId = istr.readString();
        this.typeId = istr.readShort();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, CreateNodeRequestDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public CreateNodeRequestDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        CreateNodeRequestDTO v = new CreateNodeRequestDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<CreateNodeRequestDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, CreateNodeRequestDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<CreateNodeRequestDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(CreateNodeRequestDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final CreateNodeRequestDTO _nullMarshalValue = new CreateNodeRequestDTO();

    public static final long serialVersionUID = 907265342L;
}
