// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Storage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.Storage.zeroc;

public class CreateNodeRequestDTO implements java.lang.Cloneable,
                                             java.io.Serializable
{
    public String pid;

    public String getPid()
    {
        return pid;
    }

    public void setPid(String pid)
    {
        this.pid = pid;
    }

    public String fullName;

    public String getFullName()
    {
        return fullName;
    }

    public void setFullName(String fullName)
    {
        this.fullName = fullName;
    }

    public short typeId;

    public short getTypeId()
    {
        return typeId;
    }

    public void setTypeId(short typeId)
    {
        this.typeId = typeId;
    }

    public long fileLength;

    public long getFileLength()
    {
        return fileLength;
    }

    public void setFileLength(long fileLength)
    {
        this.fileLength = fileLength;
    }

    public String userId;

    public String getUserId()
    {
        return userId;
    }

    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String parentPath;

    public String getParentPath()
    {
        return parentPath;
    }

    public void setParentPath(String parentPath)
    {
        this.parentPath = parentPath;
    }

    public String parentStoragePath;

    public String getParentStoragePath()
    {
        return parentStoragePath;
    }

    public void setParentStoragePath(String parentStoragePath)
    {
        this.parentStoragePath = parentStoragePath;
    }

    public String taskId;

    public String getTaskId()
    {
        return taskId;
    }

    public void setTaskId(String taskId)
    {
        this.taskId = taskId;
    }

    public short fileTypeId;

    public short getFileTypeId()
    {
        return fileTypeId;
    }

    public void setFileTypeId(short fileTypeId)
    {
        this.fileTypeId = fileTypeId;
    }

    public String fileVersion;

    public String getFileVersion()
    {
        return fileVersion;
    }

    public void setFileVersion(String fileVersion)
    {
        this.fileVersion = fileVersion;
    }

    public String remark;

    public String getRemark()
    {
        return remark;
    }

    public void setRemark(String remark)
    {
        this.remark = remark;
    }

    /**
     **/
    @Deprecated
    public String path;

    /**
     **/
    @Deprecated
    public String getPath()
    {
        return path;
    }

    /**
     **/
    @Deprecated
    public void setPath(String path)
    {
        this.path = path;
    }

    /**
     **/
    @Deprecated
    public String dutyId;

    /**
     **/
    @Deprecated
    public String getDutyId()
    {
        return dutyId;
    }

    /**
     **/
    @Deprecated
    public void setDutyId(String dutyId)
    {
        this.dutyId = dutyId;
    }

    /**
     **/
    @Deprecated
    public String companyId;

    /**
     **/
    @Deprecated
    public String getCompanyId()
    {
        return companyId;
    }

    /**
     **/
    @Deprecated
    public void setCompanyId(String companyId)
    {
        this.companyId = companyId;
    }

    /**
     **/
    @Deprecated
    public String projectId;

    /**
     **/
    @Deprecated
    public String getProjectId()
    {
        return projectId;
    }

    /**
     **/
    @Deprecated
    public void setProjectId(String projectId)
    {
        this.projectId = projectId;
    }

    /**
     **/
    @Deprecated
    public String classicId;

    /**
     **/
    @Deprecated
    public String getClassicId()
    {
        return classicId;
    }

    /**
     **/
    @Deprecated
    public void setClassicId(String classicId)
    {
        this.classicId = classicId;
    }

    /**
     **/
    @Deprecated
    public String issueId;

    /**
     **/
    @Deprecated
    public String getIssueId()
    {
        return issueId;
    }

    /**
     **/
    @Deprecated
    public void setIssueId(String issueId)
    {
        this.issueId = issueId;
    }

    /**
     **/
    @Deprecated
    public String pNodeId;

    /**
     **/
    @Deprecated
    public String getPNodeId()
    {
        return pNodeId;
    }

    /**
     **/
    @Deprecated
    public void setPNodeId(String pNodeId)
    {
        this.pNodeId = pNodeId;
    }

    /**
     **/
    @Deprecated
    public String orgId;

    /**
     **/
    @Deprecated
    public String getOrgId()
    {
        return orgId;
    }

    /**
     **/
    @Deprecated
    public void setOrgId(String orgId)
    {
        this.orgId = orgId;
    }

    public CreateNodeRequestDTO()
    {
        this.pid = "";
        this.fullName = "";
        this.userId = "";
        this.parentPath = "";
        this.parentStoragePath = "";
        this.taskId = "";
        this.fileVersion = "";
        this.remark = "";
        this.path = "";
        this.dutyId = "";
        this.companyId = "";
        this.projectId = "";
        this.classicId = "";
        this.issueId = "";
        this.pNodeId = "";
        this.orgId = "";
    }

    public CreateNodeRequestDTO(String pid, String fullName, short typeId, long fileLength, String userId, String parentPath, String parentStoragePath, String taskId, short fileTypeId, String fileVersion, String remark, String path, String dutyId, String companyId, String projectId, String classicId, String issueId, String pNodeId, String orgId)
    {
        this.pid = pid;
        this.fullName = fullName;
        this.typeId = typeId;
        this.fileLength = fileLength;
        this.userId = userId;
        this.parentPath = parentPath;
        this.parentStoragePath = parentStoragePath;
        this.taskId = taskId;
        this.fileTypeId = fileTypeId;
        this.fileVersion = fileVersion;
        this.remark = remark;
        this.path = path;
        this.dutyId = dutyId;
        this.companyId = companyId;
        this.projectId = projectId;
        this.classicId = classicId;
        this.issueId = issueId;
        this.pNodeId = pNodeId;
        this.orgId = orgId;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CreateNodeRequestDTO r = null;
        if(rhs instanceof CreateNodeRequestDTO)
        {
            r = (CreateNodeRequestDTO)rhs;
        }

        if(r != null)
        {
            if(this.pid != r.pid)
            {
                if(this.pid == null || r.pid == null || !this.pid.equals(r.pid))
                {
                    return false;
                }
            }
            if(this.fullName != r.fullName)
            {
                if(this.fullName == null || r.fullName == null || !this.fullName.equals(r.fullName))
                {
                    return false;
                }
            }
            if(this.typeId != r.typeId)
            {
                return false;
            }
            if(this.fileLength != r.fileLength)
            {
                return false;
            }
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.parentPath != r.parentPath)
            {
                if(this.parentPath == null || r.parentPath == null || !this.parentPath.equals(r.parentPath))
                {
                    return false;
                }
            }
            if(this.parentStoragePath != r.parentStoragePath)
            {
                if(this.parentStoragePath == null || r.parentStoragePath == null || !this.parentStoragePath.equals(r.parentStoragePath))
                {
                    return false;
                }
            }
            if(this.taskId != r.taskId)
            {
                if(this.taskId == null || r.taskId == null || !this.taskId.equals(r.taskId))
                {
                    return false;
                }
            }
            if(this.fileTypeId != r.fileTypeId)
            {
                return false;
            }
            if(this.fileVersion != r.fileVersion)
            {
                if(this.fileVersion == null || r.fileVersion == null || !this.fileVersion.equals(r.fileVersion))
                {
                    return false;
                }
            }
            if(this.remark != r.remark)
            {
                if(this.remark == null || r.remark == null || !this.remark.equals(r.remark))
                {
                    return false;
                }
            }
            if(this.path != r.path)
            {
                if(this.path == null || r.path == null || !this.path.equals(r.path))
                {
                    return false;
                }
            }
            if(this.dutyId != r.dutyId)
            {
                if(this.dutyId == null || r.dutyId == null || !this.dutyId.equals(r.dutyId))
                {
                    return false;
                }
            }
            if(this.companyId != r.companyId)
            {
                if(this.companyId == null || r.companyId == null || !this.companyId.equals(r.companyId))
                {
                    return false;
                }
            }
            if(this.projectId != r.projectId)
            {
                if(this.projectId == null || r.projectId == null || !this.projectId.equals(r.projectId))
                {
                    return false;
                }
            }
            if(this.classicId != r.classicId)
            {
                if(this.classicId == null || r.classicId == null || !this.classicId.equals(r.classicId))
                {
                    return false;
                }
            }
            if(this.issueId != r.issueId)
            {
                if(this.issueId == null || r.issueId == null || !this.issueId.equals(r.issueId))
                {
                    return false;
                }
            }
            if(this.pNodeId != r.pNodeId)
            {
                if(this.pNodeId == null || r.pNodeId == null || !this.pNodeId.equals(r.pNodeId))
                {
                    return false;
                }
            }
            if(this.orgId != r.orgId)
            {
                if(this.orgId == null || r.orgId == null || !this.orgId.equals(r.orgId))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::CreateNodeRequestDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, pid);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fullName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, typeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileLength);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, parentPath);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, parentStoragePath);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileTypeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileVersion);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, remark);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, path);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, dutyId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, companyId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, classicId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, issueId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, pNodeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, orgId);
        return h_;
    }

    public CreateNodeRequestDTO clone()
    {
        CreateNodeRequestDTO c = null;
        try
        {
            c = (CreateNodeRequestDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.pid);
        ostr.writeString(this.fullName);
        ostr.writeShort(this.typeId);
        ostr.writeLong(this.fileLength);
        ostr.writeString(this.userId);
        ostr.writeString(this.parentPath);
        ostr.writeString(this.parentStoragePath);
        ostr.writeString(this.taskId);
        ostr.writeShort(this.fileTypeId);
        ostr.writeString(this.fileVersion);
        ostr.writeString(this.remark);
        ostr.writeString(this.path);
        ostr.writeString(this.dutyId);
        ostr.writeString(this.companyId);
        ostr.writeString(this.projectId);
        ostr.writeString(this.classicId);
        ostr.writeString(this.issueId);
        ostr.writeString(this.pNodeId);
        ostr.writeString(this.orgId);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.pid = istr.readString();
        this.fullName = istr.readString();
        this.typeId = istr.readShort();
        this.fileLength = istr.readLong();
        this.userId = istr.readString();
        this.parentPath = istr.readString();
        this.parentStoragePath = istr.readString();
        this.taskId = istr.readString();
        this.fileTypeId = istr.readShort();
        this.fileVersion = istr.readString();
        this.remark = istr.readString();
        this.path = istr.readString();
        this.dutyId = istr.readString();
        this.companyId = istr.readString();
        this.projectId = istr.readString();
        this.classicId = istr.readString();
        this.issueId = istr.readString();
        this.pNodeId = istr.readString();
        this.orgId = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, CreateNodeRequestDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public CreateNodeRequestDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        CreateNodeRequestDTO v = new CreateNodeRequestDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<CreateNodeRequestDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, CreateNodeRequestDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<CreateNodeRequestDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(CreateNodeRequestDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final CreateNodeRequestDTO _nullMarshalValue = new CreateNodeRequestDTO();

    public static final long serialVersionUID = -1114718800L;
}
