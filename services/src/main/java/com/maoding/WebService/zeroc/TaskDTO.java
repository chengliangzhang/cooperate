// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `WebService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.WebService.zeroc;

public class TaskDTO implements java.lang.Cloneable,
                                java.io.Serializable
{
    public String completeDate;

    public String getCompleteDate()
    {
        return completeDate;
    }

    public void setCompleteDate(String completeDate)
    {
        this.completeDate = completeDate;
    }

    public String handlerId;

    public String getHandlerId()
    {
        return handlerId;
    }

    public void setHandlerId(String handlerId)
    {
        this.handlerId = handlerId;
    }

    public String id;

    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    public String param1;

    public String getParam1()
    {
        return param1;
    }

    public void setParam1(String param1)
    {
        this.param1 = param1;
    }

    public String planEndTime;

    public String getPlanEndTime()
    {
        return planEndTime;
    }

    public void setPlanEndTime(String planEndTime)
    {
        this.planEndTime = planEndTime;
    }

    public String planStartTime;

    public String getPlanStartTime()
    {
        return planStartTime;
    }

    public void setPlanStartTime(String planStartTime)
    {
        this.planStartTime = planStartTime;
    }

    public String projectId;

    public String getProjectId()
    {
        return projectId;
    }

    public void setProjectId(String projectId)
    {
        this.projectId = projectId;
    }

    public String projectName;

    public String getProjectName()
    {
        return projectName;
    }

    public void setProjectName(String projectName)
    {
        this.projectName = projectName;
    }

    public String stateHtml;

    public String getStateHtml()
    {
        return stateHtml;
    }

    public void setStateHtml(String stateHtml)
    {
        this.stateHtml = stateHtml;
    }

    public String stateMap;

    public String getStateMap()
    {
        return stateMap;
    }

    public void setStateMap(String stateMap)
    {
        this.stateMap = stateMap;
    }

    public String statusText;

    public String getStatusText()
    {
        return statusText;
    }

    public void setStatusText(String statusText)
    {
        this.statusText = statusText;
    }

    public String targetId;

    public String getTargetId()
    {
        return targetId;
    }

    public void setTargetId(String targetId)
    {
        this.targetId = targetId;
    }

    public String taskContent;

    public String getTaskContent()
    {
        return taskContent;
    }

    public void setTaskContent(String taskContent)
    {
        this.taskContent = taskContent;
    }

    public String taskName;

    public String getTaskName()
    {
        return taskName;
    }

    public void setTaskName(String taskName)
    {
        this.taskName = taskName;
    }

    public int taskState;

    public int getTaskState()
    {
        return taskState;
    }

    public void setTaskState(int taskState)
    {
        this.taskState = taskState;
    }

    public int taskType;

    public int getTaskType()
    {
        return taskType;
    }

    public void setTaskType(int taskType)
    {
        this.taskType = taskType;
    }

    public String taskTypeText;

    public String getTaskTypeText()
    {
        return taskTypeText;
    }

    public void setTaskTypeText(String taskTypeText)
    {
        this.taskTypeText = taskTypeText;
    }

    public String type;

    public String getType()
    {
        return type;
    }

    public void setType(String type)
    {
        this.type = type;
    }

    public TaskDTO()
    {
        this.completeDate = "";
        this.handlerId = "";
        this.id = "";
        this.param1 = "";
        this.planEndTime = "";
        this.planStartTime = "";
        this.projectId = "";
        this.projectName = "";
        this.stateHtml = "";
        this.stateMap = "";
        this.statusText = "";
        this.targetId = "";
        this.taskContent = "";
        this.taskName = "";
        this.taskTypeText = "";
        this.type = "";
    }

    public TaskDTO(String completeDate, String handlerId, String id, String param1, String planEndTime, String planStartTime, String projectId, String projectName, String stateHtml, String stateMap, String statusText, String targetId, String taskContent, String taskName, int taskState, int taskType, String taskTypeText, String type)
    {
        this.completeDate = completeDate;
        this.handlerId = handlerId;
        this.id = id;
        this.param1 = param1;
        this.planEndTime = planEndTime;
        this.planStartTime = planStartTime;
        this.projectId = projectId;
        this.projectName = projectName;
        this.stateHtml = stateHtml;
        this.stateMap = stateMap;
        this.statusText = statusText;
        this.targetId = targetId;
        this.taskContent = taskContent;
        this.taskName = taskName;
        this.taskState = taskState;
        this.taskType = taskType;
        this.taskTypeText = taskTypeText;
        this.type = type;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TaskDTO r = null;
        if(rhs instanceof TaskDTO)
        {
            r = (TaskDTO)rhs;
        }

        if(r != null)
        {
            if(this.completeDate != r.completeDate)
            {
                if(this.completeDate == null || r.completeDate == null || !this.completeDate.equals(r.completeDate))
                {
                    return false;
                }
            }
            if(this.handlerId != r.handlerId)
            {
                if(this.handlerId == null || r.handlerId == null || !this.handlerId.equals(r.handlerId))
                {
                    return false;
                }
            }
            if(this.id != r.id)
            {
                if(this.id == null || r.id == null || !this.id.equals(r.id))
                {
                    return false;
                }
            }
            if(this.param1 != r.param1)
            {
                if(this.param1 == null || r.param1 == null || !this.param1.equals(r.param1))
                {
                    return false;
                }
            }
            if(this.planEndTime != r.planEndTime)
            {
                if(this.planEndTime == null || r.planEndTime == null || !this.planEndTime.equals(r.planEndTime))
                {
                    return false;
                }
            }
            if(this.planStartTime != r.planStartTime)
            {
                if(this.planStartTime == null || r.planStartTime == null || !this.planStartTime.equals(r.planStartTime))
                {
                    return false;
                }
            }
            if(this.projectId != r.projectId)
            {
                if(this.projectId == null || r.projectId == null || !this.projectId.equals(r.projectId))
                {
                    return false;
                }
            }
            if(this.projectName != r.projectName)
            {
                if(this.projectName == null || r.projectName == null || !this.projectName.equals(r.projectName))
                {
                    return false;
                }
            }
            if(this.stateHtml != r.stateHtml)
            {
                if(this.stateHtml == null || r.stateHtml == null || !this.stateHtml.equals(r.stateHtml))
                {
                    return false;
                }
            }
            if(this.stateMap != r.stateMap)
            {
                if(this.stateMap == null || r.stateMap == null || !this.stateMap.equals(r.stateMap))
                {
                    return false;
                }
            }
            if(this.statusText != r.statusText)
            {
                if(this.statusText == null || r.statusText == null || !this.statusText.equals(r.statusText))
                {
                    return false;
                }
            }
            if(this.targetId != r.targetId)
            {
                if(this.targetId == null || r.targetId == null || !this.targetId.equals(r.targetId))
                {
                    return false;
                }
            }
            if(this.taskContent != r.taskContent)
            {
                if(this.taskContent == null || r.taskContent == null || !this.taskContent.equals(r.taskContent))
                {
                    return false;
                }
            }
            if(this.taskName != r.taskName)
            {
                if(this.taskName == null || r.taskName == null || !this.taskName.equals(r.taskName))
                {
                    return false;
                }
            }
            if(this.taskState != r.taskState)
            {
                return false;
            }
            if(this.taskType != r.taskType)
            {
                return false;
            }
            if(this.taskTypeText != r.taskTypeText)
            {
                if(this.taskTypeText == null || r.taskTypeText == null || !this.taskTypeText.equals(r.taskTypeText))
                {
                    return false;
                }
            }
            if(this.type != r.type)
            {
                if(this.type == null || r.type == null || !this.type.equals(r.type))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::TaskDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, completeDate);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, handlerId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, param1);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, planEndTime);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, planStartTime);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, stateHtml);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, stateMap);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, statusText);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, targetId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskContent);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskState);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskType);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskTypeText);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, type);
        return h_;
    }

    public TaskDTO clone()
    {
        TaskDTO c = null;
        try
        {
            c = (TaskDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.completeDate);
        ostr.writeString(this.handlerId);
        ostr.writeString(this.id);
        ostr.writeString(this.param1);
        ostr.writeString(this.planEndTime);
        ostr.writeString(this.planStartTime);
        ostr.writeString(this.projectId);
        ostr.writeString(this.projectName);
        ostr.writeString(this.stateHtml);
        ostr.writeString(this.stateMap);
        ostr.writeString(this.statusText);
        ostr.writeString(this.targetId);
        ostr.writeString(this.taskContent);
        ostr.writeString(this.taskName);
        ostr.writeInt(this.taskState);
        ostr.writeInt(this.taskType);
        ostr.writeString(this.taskTypeText);
        ostr.writeString(this.type);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.completeDate = istr.readString();
        this.handlerId = istr.readString();
        this.id = istr.readString();
        this.param1 = istr.readString();
        this.planEndTime = istr.readString();
        this.planStartTime = istr.readString();
        this.projectId = istr.readString();
        this.projectName = istr.readString();
        this.stateHtml = istr.readString();
        this.stateMap = istr.readString();
        this.statusText = istr.readString();
        this.targetId = istr.readString();
        this.taskContent = istr.readString();
        this.taskName = istr.readString();
        this.taskState = istr.readInt();
        this.taskType = istr.readInt();
        this.taskTypeText = istr.readString();
        this.type = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, TaskDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public TaskDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        TaskDTO v = new TaskDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<TaskDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, TaskDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<TaskDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(TaskDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final TaskDTO _nullMarshalValue = new TaskDTO();

    public static final long serialVersionUID = -80240829L;
}
