// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `User.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.User.zeroc;

public class UserRelatedDTO implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public String[] organizationList;

    public String[] getOrganizationList()
    {
        return organizationList;
    }

    public void setOrganizationList(String[] organizationList)
    {
        this.organizationList = organizationList;
    }

    public String getOrganizationList(int index)
    {
        return this.organizationList[index];
    }

    public void setOrganizationList(int index, String val)
    {
        this.organizationList[index] = val;
    }

    public String[] projectList;

    public String[] getProjectList()
    {
        return projectList;
    }

    public void setProjectList(String[] projectList)
    {
        this.projectList = projectList;
    }

    public String getProjectList(int index)
    {
        return this.projectList[index];
    }

    public void setProjectList(int index, String val)
    {
        this.projectList[index] = val;
    }

    public String[] taskList;

    public String[] getTaskList()
    {
        return taskList;
    }

    public void setTaskList(String[] taskList)
    {
        this.taskList = taskList;
    }

    public String getTaskList(int index)
    {
        return this.taskList[index];
    }

    public void setTaskList(int index, String val)
    {
        this.taskList[index] = val;
    }

    public UserRelatedDTO()
    {
    }

    public UserRelatedDTO(String[] organizationList, String[] projectList, String[] taskList)
    {
        this.organizationList = organizationList;
        this.projectList = projectList;
        this.taskList = taskList;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserRelatedDTO r = null;
        if(rhs instanceof UserRelatedDTO)
        {
            r = (UserRelatedDTO)rhs;
        }

        if(r != null)
        {
            if(!java.util.Arrays.equals(this.organizationList, r.organizationList))
            {
                return false;
            }
            if(!java.util.Arrays.equals(this.projectList, r.projectList))
            {
                return false;
            }
            if(!java.util.Arrays.equals(this.taskList, r.taskList))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::UserRelatedDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, organizationList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskList);
        return h_;
    }

    public UserRelatedDTO clone()
    {
        UserRelatedDTO c = null;
        try
        {
            c = (UserRelatedDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeStringSeq(this.organizationList);
        ostr.writeStringSeq(this.projectList);
        ostr.writeStringSeq(this.taskList);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.organizationList = istr.readStringSeq();
        this.projectList = istr.readStringSeq();
        this.taskList = istr.readStringSeq();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, UserRelatedDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public UserRelatedDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        UserRelatedDTO v = new UserRelatedDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<UserRelatedDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, UserRelatedDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<UserRelatedDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(UserRelatedDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final UserRelatedDTO _nullMarshalValue = new UserRelatedDTO();

    public static final long serialVersionUID = 2010596397L;
}
